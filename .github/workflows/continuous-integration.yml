name: iRM Embedded CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    # checkout
    - uses: actions/checkout@v2
    # cached ARM toolchain
    - name: cache ARM toolchain
      id: cache-arm
      uses: actions/cache@v2
      with:
        path: ~/arm-toolchain
        key: ${{ runner.os }}-arm-toolchain
    # download ARM toolchain
    - name: download ARM toolchain
      if: steps.cache-arm.outputs.cache-hit != 'true'
      run: |
        wget -O ~/gcc-arm-none-eabi.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2020q2/gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.bz2
        mkdir ~/arm-toolchain
        tar -xjf ~/gcc-arm-none-eabi.tar.bz2 --directory ~/arm-toolchain --strip-components=1
    - name: build
      run: |
        export PATH=~/arm-toolchain/bin:$PATH
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Debug ..
        make -j

  build-mac:
    runs-on: macos-latest
    steps:
    # checkout
    - uses: actions/checkout@v2
    # cached ARM toolchain
    - name: cache ARM toolchain
      id: cache-arm
      uses: actions/cache@v2
      with:
        path: ~/arm-toolchain
        key: ${{ runner.os }}-arm-toolchain
    # download ARM toolchain
    - name: download ARM toolchain
      if: steps.cache-arm.outputs.cache-hit != 'true'
      run: |
        wget -O ~/gcc-arm-none-eabi.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2020q2/gcc-arm-none-eabi-9-2020-q2-update-mac.tar.bz2
        mkdir ~/arm-toolchain
        tar -xjf ~/gcc-arm-none-eabi.tar.bz2 --directory ~/arm-toolchain --strip-components=1
    - name: build
      run: |
        export PATH=~/arm-toolchain/bin:$PATH
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Debug ..
        make -j

  build-windows:
    runs-on: windows-latest
    steps:
    # checkout
    - uses: actions/checkout@v2
    # cached ARM toolchain
    - name: cache ARM toolchain
      id: cache-arm
      uses: actions/cache@v2
      with:
        path: ~/arm-toolchain
        key: ${{ runner.os }}-arm-toolchain
    # download ARM toolchain
    - name: download ARM toolchain
      if: steps.cache-arm.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri "https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2020q2/gcc-arm-none-eabi-9-2020-q2-update-win32.zip" -OutFile "~/gcc-arm-none-eabi.zip"
        mkdir ~/arm-toolchain
        unzip ~/gcc-arm-none-eabi.zip -d ~/arm-toolchain
    - name: build
      run: |
        $Env:Path += ";%userprofile%\\arm-toolchain\\bin"
        mkdir build && cd build
        cmake -G"MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug ..
        make -j
